varnishtest "Dropping polling of a backend"

server s1 -repeat 40 {
	rxreq
	txresp
} -start

varnish v1 -vcl {
	import backend_dyn from "${vmod_topbuild}/src/.libs/libvmod_backend_dyn.so";

	backend dummy { .host="${bad_ip}"; }

	probe p {
		.window = 8;
		.initial = 7;
		.threshold = 8;
		.interval = 0.1s;
	}

	sub vcl_init {
		if (!backend_dyn.create(name="be", host="${s1_addr}",
		   		        	   port="${s1_port}",
						   probe=p)) {
			return(fail);
		}
	}

	sub vcl_backend_fetch {
		set bereq.backend = backend_dyn.by_name("be");
	}
} -start

delay 1

varnish v1 -expect VBE.vcl1.be.happy > 0
varnish v1 -expect MAIN.n_backend == 2

varnish v1 -vcl {
	import backend_dyn from "${vmod_topbuild}/src/.libs/libvmod_backend_dyn.so";

	backend dummy { .host="${bad_ip}"; }

	sub vcl_init {
		if (!backend_dyn.create(name="be", host="${s1_addr}",
		   		        	   port="${s1_port}")) {
			return(fail);
		}
	}

	sub vcl_backend_fetch {
		set bereq.backend = backend_dyn.by_name("be");
	}
} -cliok "vcl.use vcl2" -cliok "vcl.discard vcl1"

delay 1

varnish v1 -cliok "vcl.list"
varnish v1 -cliok "backend.list -p"

server s1 -break {
	rxreq
	expect req.url == /foo
	txresp -bodylen 4
} -start

client c1 {
	txreq -url /foo
	rxresp
	expect resp.status == 200
	expect resp.bodylen == 4
} -run

varnish v1 -expect VBE.vcl2.be.happy == 0
varnish v1 -expect MAIN.n_backend == 2
